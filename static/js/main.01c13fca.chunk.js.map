{"version":3,"sources":["Components/Dashboard/Balance/index.js","Components/Dashboard/Controls/index.js","Components/Dashboard/TransactionHistory/index.js","Components/Dashboard/index.js","App.js","index.js"],"names":["Balance","props","balance","deposit","withdraw","react_default","a","createElement","className","Control","state","value","handleChange","e","target","validity","valid","_this","setState","handleClick","flag","option","_this2","this","type","pattern","onChange","Button","variant","color","onClick","Component","TransactionHistory","history","map","item","key","id","amount","date","MoviePage","setHistory","_this$state","parseInt","Date","now","toLocaleString","substring","length","console","log","toast","error","newAction","shortid","generate","concat","Object","toConsumableArray","localStorage","setItem","JSON","stringify","getItem","_JSON$parse","parse","action","_this$state2","Controls_Control","Dashboard_Balance","Dashboard_TransactionHistory","App","configure","Dashboard_MoviePage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.01c13fca.chunk.js","sourcesContent":["import React from 'react';\nimport './balance.css';\n\nconst Balance = (props) => {\n\n    const { balance, deposit, withdraw } = props;\n        return (\n        <section className=\"balance\">\n            <span>⬆️{deposit}$</span>\n            <span>⬇️{withdraw}$</span>\n            <span>Balance: {balance}$</span>\n        </section>\n    )\n}\n\nexport default Balance;","import React, {Component} from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport './control.css'\n\n\nexport default class Control extends Component {\n    state = {\n        value: ''\n    };\n\n    handleChange = (e) => {\n        const value = e.target.validity.valid ? e.target.value : this.state.value;\n        this.setState({value});\n    };\n\n    handleClick = (flag) => {\n        this.props.option(flag, this.state.value)\n    };\n\n    render (){\n\n        return (\n            <section className=\"controls\">\n                <input\n                    value={this.state.value}\n                    type=\"text\"\n                    pattern=\"[0-9]*\"\n                    onChange={this.handleChange}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={()=>this.handleClick(true)}>\n                    Deposit\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={()=>this.handleClick(false)}>\n                    Withdraw\n                </Button>\n            </section>\n        )\n    }\n}","import React from 'react';\nimport './transaction-history.css'\n\nconst TransactionHistory = (props) => {\n    const {history} = props;\n\n    return (\n        <table className=\"history\">\n            <thead>\n            <tr>\n                <th>Transaction</th>\n                <th>Amount</th>\n                <th>Date</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n                history.map((item) => {\n                    return (\n                        <tr key={item.id}>\n                            <td>{item.type}</td>\n                            <td>{item.amount}.00$</td>\n                            <td>{item.date}</td>\n                        </tr>\n                    )\n                })\n            }\n            </tbody>\n        </table>\n    )\n}\n\nexport default TransactionHistory","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport shortid from 'shortid'\n\nimport Balance from './Balance';\nimport Controls from './Controls';\nimport TransactionHistory from './TransactionHistory';\nimport './dashboard.css'\n\n\nexport default class MoviePage extends Component {\n\n    state = {\n        history: [],\n        balance: 0,\n        deposit: 0,\n        withdraw: 0\n    };\n\n    setHistory = (flag, value) => {\n        const { balance, withdraw, deposit} = this.state;\n        let valid = true;\n        if (parseInt(value)) {\n            let type = '',\n                date = new Date(Date.now()).toLocaleString();\n            date = date.substring(0, date.length - 3);\n\n            if (flag) {\n                type = 'Deposit';\n                this.setState({balance: balance + parseInt(value)})\n                this.setState({deposit: deposit + parseInt(value)});\n            } else {\n                type = 'Withdrawal';\n                if (balance - parseInt(value) < 0) {\n                    valid = false;\n                    console.log(toast);\n                    toast.error('На счету недостаточно средств для проведения операции!');\n                } else {\n                    this.setState({balance: balance - parseInt(value)});\n                    this.setState({withdraw: withdraw + parseInt(value)});\n                }\n            }\n\n            if (valid) {\n                let newAction = {\n                    id: shortid.generate(),\n                    type: type,\n                    amount: value,\n                    date: date\n                };\n\n                this.setState({\n                    history: [...this.state.history, newAction],\n                });\n            }\n        } else {\n            toast.error('Введите сумму для проведения операции!');\n        }\n    };\n\n    componentDidUpdate(){\n        localStorage.setItem('stateApp', JSON.stringify(this.state));\n    }\n\n    componentDidMount(){\n        if (localStorage.getItem('stateApp')){\n            const {history, balance, deposit, withdraw} = JSON.parse(localStorage.getItem('stateApp'));\n            history.map((action) => {\n                return this.setState(state => {\n                    const history = [...state.history, action];\n                    return {history}\n                });\n            });\n\n            this.setState({\n                balance: balance,\n                deposit: deposit,\n                withdraw: withdraw\n            })\n        }\n    }\n\n    render () {\n        const {balance, withdraw, deposit, history} = this.state;\n        return (\n            <div className=\"dashboard\" >\n                <Controls option = {this.setHistory}/>\n                <Balance balance = {balance} withdraw = {withdraw} deposit = {deposit}/>\n                <TransactionHistory history = {history}/>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.css';\n\n\nimport { Dashboard} from './Components/';\n\nconst App = () => {\n    toast.configure()\n\n    return (\n        <div className=\"App\">\n            <Dashboard/>\n        </div>\n    )\n\n}\n\nexport default App;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}